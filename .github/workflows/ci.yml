name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

concurrency:
  group: ${{ github.ref }}
  cancel-in-progress: true

jobs:
  test-and-coverage-macos:
    runs-on: macos-latest
    permissions:
      contents: read
    steps:
      - uses: actions/checkout@v4
      - name: Build & test with coverage (SwiftPM)
        shell: bash
        run: |
          set -euo pipefail

          swift test --parallel --enable-code-coverage

          PROFILE="$(find .build -type f -name '*.profdata' -print -quit || true)"

          if [ -z "${PROFILE}" ]; then
            echo "No .profdata found, trying to merge .profraw files..."
            PROFRAWS=$(find .build -type f -name '*.profraw' | tr '\n' ' ')
            if [ -z "$PROFRAWS" ]; then
              echo "No .profraw files found either. Directory listing for debug:" >&2
              find .build -maxdepth 4 -type f -print | sed 's/^/  /'
              exit 1
            fi
            xcrun llvm-profdata merge -sparse $PROFRAWS -o coverage.profdata
            PROFILE="coverage.profdata"
          fi

          echo "Using instr-profile: $PROFILE"

          BIN_DIR="$(swift build --show-bin-path)"
          OBJECTS=$(find "$BIN_DIR" .build -type f \( -name "*.xctest" -o -perm -111 -o -name "*.dylib" \) | tr '\n' ' ')
          if [ -z "$OBJECTS" ]; then
            echo "No binaries found to export coverage from." >&2
            exit 1
          fi

          xcrun llvm-cov export -format=lcov -instr-profile "$PROFILE" $OBJECTS > coverage.lcov
          echo "Generated coverage.lcov:"
          head -n 20 coverage.lcov || true

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v4
        with:
          files: coverage.lcov
          flags: unittests
          fail_ci_if_error: true
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
